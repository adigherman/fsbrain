warnings_are_errors: yes
cache: packages
bioc_required: yes
cran: http://cran.rstudio.com
dist: xenial
addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libxml2-dev
      - libfftw3-dev
      - libgsl0-dev
      - mesa-common-dev
      - libglu1-mesa-dev
      - devscripts
      - libomp-dev
      - libhdf5-serial-dev
      - libhdf5-dev

language: r
r:
  - release

dist: xenial
services:
  - xvfb

env:
  global:
#    - RGL_USE_NULL=TRUE
    - PROJECT_NAME=neuroconductor
    - DISPLAY=:99.0
    - R_REMOTES_NO_ERRORS_FROM_WARNINGS=true
    - _R_CHECK_FORCE_SUGGESTS_=false
    - CACHE_NAME="${TRAVIS_OS_NAME}-R-${TRAVIS_R_VERSION}"
before_install:
  - if [ "$TRAVIS_DIST" = "xenial" ]; then sudo apt-get install -y libgit2-dev ; sudo apt-get install -y mesa-common-dev libglu1-mesa-dev libmagick++-dev ; fi
  - ulimit -n 2048
  - export PROJ_DIR=`basename $PWD`
  - fname=travis_helpers.sh
  - wget -O ${fname} http://bit.ly/travis_helpers
  - cat ${fname}; source ${fname}; rm ${fname}
  - cat DESCRIPTION
  - codename=`linux_codename`;
  - start_xvfb ;
  - export rver=`r_version`; echo $rver ;
  - Rscript -e ".libPaths(); install.packages('magick')"
  - x=`export_clang_cxx`; eval ${x}
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then no_open_mp ; fi
  - jags_install || true;
  - if `need_v8`; then v8_install || true; fi
  - dcmtk_install || true;
  - gsl_install 2.1 || true ;
  - echo "CC=${CC}, CXX=${CXX}, CXX1X=${CXX1X}"
  - echo "CXX1XSTD=${CXX1XSTD}, CXX11=${CXX11}"
  - echo "CXX1XSTD=${CXX1XSTD}, CXX11=${CXX11}"
  - clang_cxx
  - export cmake_version="3.11"
  - cmake --version
  - x=`cmake_setup`; echo "${x}"; eval ${x};
  - cmake --version
  - remove_neuroc_packages
  - cat DESCRIPTION
  - install_remotes_no_dep
  - cat DESCRIPTION
  - export PACKAGE_NAME=`package_name`
  - echo "Package Name is $PACKAGE_NAME"
  - if [[ "${PACKAGE_NAME}" == "waveslim" ]]; then fftw_install ; fi
  - if [[ "${PACKAGE_NAME}" == "dti" || "${PACKAGE_NAME}" == "qMRI" ]]; then gsl_install
    ; fi
  - if [[ "${PACKAGE_NAME}" == "ROpenCVLite" || "${PACKAGE_NAME}" == "Rvision" ||
    "${PACKAGE_NAME}" == "rtapas" || "${PACKAGE_NAME}" == "stapler" ]]; then shopt
    -s expand_aliases ; x=`Rscript -e "cat(Sys.which('R'))"` ; echo "reset R" ; alias
    R="travis_wait 100 ${x}" ; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then if [ `need_hdf5` ]; then hdf5_install ;
    fi fi
  - setup_python 3.6 false ;
  - install_python_requirements ;
  - R CMD javareconf || true;
  - sudo R CMD javareconf || true;
r_packages:
  - covr

after_success:
  - Rscript -e 'library(covr); codecov(type = "all")'
